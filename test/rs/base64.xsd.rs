// Code generated by xgen. DO NOT EDIT.

use serde::Serialize;
use serde::Deserialize;

use serde_xml_rs::from_reader;


// MyType1 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType1 {
	#[serde(rename = "myType1")]
	pub my_type1: String,
}


// MyType2 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType2 {
	#[serde(rename = "length")]
	pub length: Option<i32>,
	#[serde(rename = "$value")]
	pub value: String,
}


// MyType3 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType3 {
	#[serde(rename = "length")]
	pub length: Option<i32>,
	#[serde(rename = "$value")]
	pub value: u8,
}


// MyType4 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType4 {
	#[serde(rename = "title")]
	pub title: String,
	#[serde(rename = "blob")]
	pub blob: String,
	#[serde(rename = "timestamp")]
	pub timestamp: u8,
}


// MyType5 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType5 {
	#[serde(rename = "myType5")]
	pub my_type5: String,
}


// MyType6 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType6 {
	#[serde(rename = "code")]
	pub code: Option<String>,
	#[serde(rename = "identifier")]
	pub identifier: Option<i32>,
}


// MyType7 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType7 {
	#[serde(rename = "origin")]
	pub origin: String,
	#[serde(rename = "$value")]
	pub value: String,
}


// TopLevel ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TopLevel {
	#[serde(rename = "cost")]
	pub cost: Option<f64>,
	#[serde(rename = "LastUpdated")]
	pub last_updated: Option<u8>,
	#[serde(rename = "nested")]
	pub nested: Option<MyType7>,
	#[serde(rename = "myType1")]
	pub my_type1: Vec<String>,
	#[serde(rename = "myType2")]
	pub my_type2: Vec<MyType2>,
	#[serde(rename = "MyType11")]
	pub my_type11: Vec<MyType11>,
	#[serde(flatten)]
	pub my_type6: MyType6,
}


// sub_level ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct sub_level {
	#[serde(rename = "SubLevel")]
	pub sub_level: MyType12,
}


// MyType12 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType12 {
	#[serde(rename = "myType1")]
	pub my_type1: String,
	#[serde(rename = "myType2")]
	pub my_type2: MyType2,
}


// MyType11 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType11 {
	#[serde(rename = "SubLevel")]
	pub sub_level: MyType12,
}
